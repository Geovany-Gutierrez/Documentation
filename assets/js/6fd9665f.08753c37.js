"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4251],{4568:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>t,toc:()=>c});var a=r(4848),o=r(8453);const i={sidebar_position:2,title:"Tipos de Dados em Golang",sidebar_label:"Tipos de Dados"},s="Tipos de Dados em Golang",t={id:"Home/Golang/TiposDeDados",title:"Tipos de Dados em Golang",description:"Existem diferentes tipos de dados em Golang, que incluem: number, string, boolean, array, pointer, struct, map e interface.",source:"@site/docs/Home/Golang/TiposDeDados.md",sourceDirName:"Home/Golang",slug:"/Home/Golang/TiposDeDados",permalink:"/Documentation/docs/Home/Golang/TiposDeDados",draft:!1,unlisted:!1,editUrl:"https://github.com/Geovany-Gutierrez/Documentation/edit/main/my-website/docs/Home/Golang/TiposDeDados.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Tipos de Dados em Golang",sidebar_label:"Tipos de Dados"},sidebar:"tutorialSidebar",previous:{title:"Introdu\xe7\xe3o",permalink:"/Documentation/docs/Home/Golang/Introduction"}},l={},c=[{value:"Exemplos",id:"exemplos",level:2},{value:"Number (int, float64)",id:"number-int-float64",level:3},{value:"String",id:"string",level:3},{value:"Boolean",id:"boolean",level:3},{value:"Array",id:"array",level:3},{value:"Pointer",id:"pointer",level:3},{value:"Struct (Structure)",id:"struct-structure",level:3},{value:"Map",id:"map",level:3},{value:"Interface",id:"interface",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"tipos-de-dados-em-golang",children:"Tipos de Dados em Golang"}),"\n",(0,a.jsxs)(n.p,{children:["Existem diferentes tipos de dados em Golang, que incluem: ",(0,a.jsx)(n.code,{children:"number"}),", ",(0,a.jsx)(n.code,{children:"string"}),", ",(0,a.jsx)(n.code,{children:"boolean"}),", ",(0,a.jsx)(n.code,{children:"array"}),", ",(0,a.jsx)(n.code,{children:"pointer"}),", ",(0,a.jsx)(n.code,{children:"struct"}),", ",(0,a.jsx)(n.code,{children:"map"})," e ",(0,a.jsx)(n.code,{children:"interface"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"exemplos",children:"Exemplos"}),"\n",(0,a.jsx)(n.h3,{id:"number-int-float64",children:"Number (int, float64)"}),"\n",(0,a.jsx)(n.p,{children:"Usado para representar valores num\xe9ricos (inteiros ou decimais)."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",children:'package main\r\n\r\nimport "fmt"\r\n\r\nfunc main() {\r\n    // Inteiro\r\n    var intVar int = 42\r\n    fmt.Println(intVar)\r\n\r\n    // Decimal\r\n    var decimalVar float64 = 3.14\r\n    fmt.Println(decimalVar)\r\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Nesse exemplo, ",(0,a.jsx)(n.code,{children:"intVar"})," \xe9 um n\xfamero inteiro, e ",(0,a.jsx)(n.code,{children:"decimalVar"})," \xe9 um decimal."]}),"\n",(0,a.jsx)(n.h3,{id:"string",children:"String"}),"\n",(0,a.jsx)(n.p,{children:"Usado para representar uma sequ\xeancia de caracteres."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",children:'package main\r\n\r\nimport "fmt"\r\n\r\nfunc main() {\r\n    var stringVar string = "Hello, Golang"\r\n    fmt.Println(stringVar)\r\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Nesse exemplo, a vari\xe1vel do tipo string ",(0,a.jsx)(n.code,{children:"stringVar"}),' recebe o texto "Hello, Golang".']}),"\n",(0,a.jsx)(n.h3,{id:"boolean",children:"Boolean"}),"\n",(0,a.jsx)(n.p,{children:"Usado para representar valores l\xf3gicos (true ou false)."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",children:'package main\r\n\r\nimport "fmt"\r\n\r\nfunc main() {\r\n    var boolVar bool = true\r\n    fmt.Println(boolVar)\r\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Nesse exemplo, ",(0,a.jsx)(n.code,{children:"boolVar"})," recebe o valor l\xf3gico 'true'."]}),"\n",(0,a.jsx)(n.h3,{id:"array",children:"Array"}),"\n",(0,a.jsx)(n.p,{children:"Usado para armazenar uma sequ\xeancia de elementos do mesmo tipo com valor fixo."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",children:'package main\r\n\r\nimport "fmt"\r\n\r\nfunc main() {\r\n    var intArray [3]int = [3]int{1, 2, 3}\r\n    fmt.Println(intArray)\r\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Nesse exemplo, ",(0,a.jsx)(n.code,{children:"intArray"})," \xe9 um array de inteiros com tamanho fixo (3)."]}),"\n",(0,a.jsx)(n.h3,{id:"pointer",children:"Pointer"}),"\n",(0,a.jsx)(n.p,{children:"Usado para guardar o endere\xe7o de mem\xf3ria de uma vari\xe1vel."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",children:'package main\r\n\r\nimport "fmt"\r\n\r\nfunc main() {\r\n    var originalVar int = 42\r\n    var pointerVar *int = &originalVar\r\n    fmt.Println(*pointerVar) // Desreferenciando o ponteiro\r\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Nesse exemplo, ",(0,a.jsx)(n.code,{children:"pointerVar"})," \xe9 um ponteiro para o endere\xe7o de mem\xf3ria do valor de ",(0,a.jsx)(n.code,{children:"originalVar"}),"."]}),"\n",(0,a.jsx)(n.h3,{id:"struct-structure",children:"Struct (Structure)"}),"\n",(0,a.jsx)(n.p,{children:"Usado para agrupar vari\xe1veis de diferentes tipos sob um \xfanico nome."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",children:'package main\r\n\r\nimport "fmt"\r\n\r\ntype Person struct {\r\n    Name string\r\n    Age  int\r\n}\r\n\r\nfunc main() {\r\n    var personVar Person = Person{Name: "Alice", Age: 22}\r\n    fmt.Println(personVar)\r\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Nesse exemplo, ",(0,a.jsx)(n.code,{children:"personVar"})," \xe9 um struct representando uma 'Person', com valores atribu\xeddos aos seus campos."]}),"\n",(0,a.jsx)(n.h3,{id:"map",children:"Map"}),"\n",(0,a.jsx)(n.p,{children:"Usado para representar pares de chave-valor."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",children:'package main\r\n\r\nimport "fmt"\r\n\r\nfunc main() {\r\n    var myMap map[string]int = map[string]int{"one": 1, "two": 2, "three": 3}\r\n    fmt.Println(myMap)\r\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Nesse exemplo, ",(0,a.jsx)(n.code,{children:"myMap"})," \xe9 um map com chaves do tipo string e valores inteiros."]}),"\n",(0,a.jsx)(n.h3,{id:"interface",children:"Interface"}),"\n",(0,a.jsx)(n.p,{children:"Um conjunto de m\xe9todos (com suas assinaturas) que se espera que a struct tenha implementado."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-go",children:'package main\r\n\r\nimport "fmt"\r\n\r\ntype Shape interface {\r\n    Area() float64\r\n}\r\n\r\ntype Circle struct {\r\n    Radius float64\r\n}\r\n\r\nfunc (c Circle) Area() float64 {\r\n    return 3.14 * c.Radius * c.Radius\r\n}\r\n\r\nfunc main() {\r\n    var myShape Shape = Circle{Radius: 5.0}\r\n    fmt.Println(myShape.Area())\r\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Nesse exemplo, ",(0,a.jsx)(n.code,{children:"Shape"})," \xe9 uma interface, e ",(0,a.jsx)(n.code,{children:"Circle"})," \xe9 uma struct implementando o m\xe9todo ",(0,a.jsx)(n.code,{children:"Area"})," da interface ",(0,a.jsx)(n.code,{children:"Shape"}),"."]})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>t});var a=r(6540);const o={},i=a.createContext(o);function s(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);