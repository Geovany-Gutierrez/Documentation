"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[65],{2467:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>r,toc:()=>c});var s=n(4848),d=n(8453);const a={title:"Conceitos fundamentais do C#",sidebar_position:1},i="Fundamentos C#",r={id:"fundamentos/intro",title:"Conceitos fundamentais do C#",description:"Tipos de dados, vari\xe1veis e constantes em C#:",source:"@site/docs/fundamentos/intro.md",sourceDirName:"fundamentos",slug:"/fundamentos/intro",permalink:"/my-website/docs/fundamentos/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/Geovany-Gutierrez/Documentation/edit/main/my-website/docs/fundamentos/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Conceitos fundamentais do C#",sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"POO e Principios SOLID",permalink:"/my-website/docs/category/poo-e-principios-solid"}},l={},c=[{value:"Tipos de dados, vari\xe1veis e constantes em C#:",id:"tipos-de-dados-vari\xe1veis-e-constantes-em-c",level:2},{value:"Exemplo de declara\xe7\xe3o de vari\xe1veis em C#:",id:"exemplo-de-declara\xe7\xe3o-de-vari\xe1veis-em-c",level:3},{value:"Exemplo de declara\xe7\xe3o de constantes em C#:",id:"exemplo-de-declara\xe7\xe3o-de-constantes-em-c",level:3},{value:"Estruturas de controle (if, else, switch):",id:"estruturas-de-controle-if-else-switch",level:2},{value:"Exemplo de uso do if-else em C#:",id:"exemplo-de-uso-do-if-else-em-c",level:3},{value:"Exemplo de uso do switch em C#:",id:"exemplo-de-uso-do-switch-em-c",level:3},{value:"Loops (for, while):",id:"loops-for-while",level:2},{value:"Exemplo de uso do for em C#:",id:"exemplo-de-uso-do-for-em-c",level:3},{value:"Exemplo de uso do while em C#:",id:"exemplo-de-uso-do-while-em-c",level:3},{value:"Arrays e cole\xe7\xf5es em C#:",id:"arrays-e-cole\xe7\xf5es-em-c",level:2},{value:"Exemplo de uso de arrays em C#:",id:"exemplo-de-uso-de-arrays-em-c",level:3},{value:"Exemplo de uso de List em C#:",id:"exemplo-de-uso-de-list-em-c",level:3},{value:"M\xe9todos e fun\xe7\xf5es:",id:"m\xe9todos-e-fun\xe7\xf5es",level:2},{value:"Exemplo de declara\xe7\xe3o de m\xe9todo em C#:",id:"exemplo-de-declara\xe7\xe3o-de-m\xe9todo-em-c",level:3},{value:"Exemplo de chamada de m\xe9todo em C#:",id:"exemplo-de-chamada-de-m\xe9todo-em-c",level:3},{value:"Classes e objetos em C#:",id:"classes-e-objetos-em-c",level:2},{value:"Exemplo de declara\xe7\xe3o de classe em C#:",id:"exemplo-de-declara\xe7\xe3o-de-classe-em-c",level:3},{value:"Exemplo de cria\xe7\xe3o de objeto em C#:",id:"exemplo-de-cria\xe7\xe3o-de-objeto-em-c",level:3},{value:"Heran\xe7a, polimorfismo e encapsulamento em C#:",id:"heran\xe7a-polimorfismo-e-encapsulamento-em-c",level:2},{value:"Exemplo de heran\xe7a em C#:",id:"exemplo-de-heran\xe7a-em-c",level:3},{value:"Exemplo de polimorfismo em C#:",id:"exemplo-de-polimorfismo-em-c",level:3},{value:"Exemplo de encapsulamento em C#:",id:"exemplo-de-encapsulamento-em-c",level:3}];function t(e){const o={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.h1,{id:"fundamentos-c",children:"Fundamentos C#"}),"\n",(0,s.jsx)(o.h2,{id:"tipos-de-dados-vari\xe1veis-e-constantes-em-c",children:"Tipos de dados, vari\xe1veis e constantes em C#:"}),"\n",(0,s.jsxs)(o.p,{children:["Os tipos de dados em C# s\xe3o fundamentais para declarar vari\xe1veis e constantes. Os tipos incluem ",(0,s.jsx)(o.strong,{children:"int"}),", ",(0,s.jsx)(o.strong,{children:"float"}),", ",(0,s.jsx)(o.strong,{children:"string"}),", ",(0,s.jsx)(o.strong,{children:"bool"}),", entre outros. Vari\xe1veis podem armazenar valores que podem ser alterados durante a execu\xe7\xe3o do programa, enquanto as constantes t\xeam valores fixos que n\xe3o podem ser modificados."]}),"\n",(0,s.jsx)(o.h3,{id:"exemplo-de-declara\xe7\xe3o-de-vari\xe1veis-em-c",children:"Exemplo de declara\xe7\xe3o de vari\xe1veis em C#:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:'int idade = 25;\nfloat altura = 1.75f;\nstring nome = "Jo\xe3o";\nbool isAtivo = true;\n'})}),"\n",(0,s.jsx)(o.h3,{id:"exemplo-de-declara\xe7\xe3o-de-constantes-em-c",children:"Exemplo de declara\xe7\xe3o de constantes em C#:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:'const float PI = 3.14f;\nconst string Saudacao = "Ol\xe1, mundo!";\n'})}),"\n",(0,s.jsx)(o.h2,{id:"estruturas-de-controle-if-else-switch",children:"Estruturas de controle (if, else, switch):"}),"\n",(0,s.jsxs)(o.p,{children:["As estruturas de controle permitem que voc\xea altere o fluxo de execu\xe7\xe3o do seu programa com base em condi\xe7\xf5es espec\xedficas. O ",(0,s.jsx)(o.strong,{children:"if"})," e o ",(0,s.jsx)(o.strong,{children:"else"})," s\xe3o usados para tomar decis\xf5es simples, enquanto o ",(0,s.jsx)(o.strong,{children:"switch"})," \xe9 \xfatil quando voc\xea precisa selecionar uma a\xe7\xe3o com base no valor de uma express\xe3o."]}),"\n",(0,s.jsx)(o.h3,{id:"exemplo-de-uso-do-if-else-em-c",children:"Exemplo de uso do if-else em C#:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:'int idade = 18;\nif (idade >= 18) {\n    Console.WriteLine("Voc\xea \xe9 maior de idade.");\n} else {\n    Console.WriteLine("Voc\xea \xe9 menor de idade.");\n}\n'})}),"\n",(0,s.jsx)(o.h3,{id:"exemplo-de-uso-do-switch-em-c",children:"Exemplo de uso do switch em C#:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:'int diaDaSemana = 3;\nswitch (diaDaSemana) {\n    case 1:\n        Console.WriteLine("Segunda-feira");\n        break;\n    case 2:\n        Console.WriteLine("Ter\xe7a-feira");\n        break;\n    // Outros casos...\n    default:\n        Console.WriteLine("Dia inv\xe1lido");\n        break;\n}\n'})}),"\n",(0,s.jsx)(o.h2,{id:"loops-for-while",children:"Loops (for, while):"}),"\n",(0,s.jsxs)(o.p,{children:["Os loops permitem que voc\xea execute uma determinada parte de c\xf3digo repetidamente at\xe9 que uma condi\xe7\xe3o seja atendida. O ",(0,s.jsx)(o.strong,{children:"for"})," \xe9 \xfatil quando voc\xea sabe quantas vezes deseja executar o loop, enquanto o ",(0,s.jsx)(o.strong,{children:"while"})," \xe9 usado quando voc\xea precisa repetir uma opera\xe7\xe3o enquanto uma condi\xe7\xe3o for verdadeira."]}),"\n",(0,s.jsx)(o.h3,{id:"exemplo-de-uso-do-for-em-c",children:"Exemplo de uso do for em C#:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:"for (int i = 0; i < 5; i++) {\n    Console.WriteLine(i);\n}\n"})}),"\n",(0,s.jsx)(o.h3,{id:"exemplo-de-uso-do-while-em-c",children:"Exemplo de uso do while em C#:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:"int contador = 0;\nwhile (contador < 5) {\n    Console.WriteLine(contador);\n    contador++;\n}\n"})}),"\n",(0,s.jsx)(o.h2,{id:"arrays-e-cole\xe7\xf5es-em-c",children:"Arrays e cole\xe7\xf5es em C#:"}),"\n",(0,s.jsxs)(o.p,{children:["Arrays e cole\xe7\xf5es s\xe3o usados para armazenar m\xfaltiplos valores do mesmo tipo. Arrays t\xeam um tamanho fixo, enquanto cole\xe7\xf5es como ",(0,s.jsx)(o.strong,{children:"List"})," podem crescer dinamicamente."]}),"\n",(0,s.jsx)(o.h3,{id:"exemplo-de-uso-de-arrays-em-c",children:"Exemplo de uso de arrays em C#:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:"int[] numeros = new int[3] { 1, 2, 3 };\n"})}),"\n",(0,s.jsx)(o.h3,{id:"exemplo-de-uso-de-list-em-c",children:"Exemplo de uso de List em C#:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:'List<string> nomes = new List<string>();\nnomes.Add("Maria");\nnomes.Add("Jo\xe3o");\nnomes.Add("Ana");\n'})}),"\n",(0,s.jsx)(o.h2,{id:"m\xe9todos-e-fun\xe7\xf5es",children:"M\xe9todos e fun\xe7\xf5es:"}),"\n",(0,s.jsx)(o.p,{children:"M\xe9todos e fun\xe7\xf5es s\xe3o blocos de c\xf3digo reutiliz\xe1veis que podem executar uma tarefa espec\xedfica. Eles ajudam a organizar e simplificar o c\xf3digo."}),"\n",(0,s.jsx)(o.h3,{id:"exemplo-de-declara\xe7\xe3o-de-m\xe9todo-em-c",children:"Exemplo de declara\xe7\xe3o de m\xe9todo em C#:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:"public int Somar(int a, int b) {\n    return a + b;\n}\n"})}),"\n",(0,s.jsx)(o.h3,{id:"exemplo-de-chamada-de-m\xe9todo-em-c",children:"Exemplo de chamada de m\xe9todo em C#:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:"int resultado = Somar(3, 4);\nConsole.WriteLine(resultado); // Sa\xedda: 7\n"})}),"\n",(0,s.jsx)(o.h2,{id:"classes-e-objetos-em-c",children:"Classes e objetos em C#:"}),"\n",(0,s.jsx)(o.p,{children:"Classes s\xe3o modelos para objetos, que s\xe3o inst\xe2ncias dessas classes. Elas encapsulam dados e comportamentos relacionados em uma \xfanica unidade."}),"\n",(0,s.jsx)(o.h3,{id:"exemplo-de-declara\xe7\xe3o-de-classe-em-c",children:"Exemplo de declara\xe7\xe3o de classe em C#:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:"public class Carro {\n    public string Marca { get; set; }\n    public string Modelo { get; set; }\n    public int Ano { get; set; }\n}\n"})}),"\n",(0,s.jsx)(o.h3,{id:"exemplo-de-cria\xe7\xe3o-de-objeto-em-c",children:"Exemplo de cria\xe7\xe3o de objeto em C#:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:'Carro meuCarro = new Carro();\nmeuCarro.Marca = "Toyota";\nmeuCarro.Modelo = "Corolla";\nmeuCarro.Ano = 2022;\n'})}),"\n",(0,s.jsx)(o.h2,{id:"heran\xe7a-polimorfismo-e-encapsulamento-em-c",children:"Heran\xe7a, polimorfismo e encapsulamento em C#:"}),"\n",(0,s.jsx)(o.p,{children:"Heran\xe7a permite que uma classe herde caracter\xedsticas (m\xe9todos e propriedades) de outra classe. Polimorfismo permite que objetos de classes diferentes sejam tratados de forma uniforme. Encapsulamento \xe9 o conceito de ocultar os detalhes internos de uma classe e expor apenas o necess\xe1rio."}),"\n",(0,s.jsx)(o.h3,{id:"exemplo-de-heran\xe7a-em-c",children:"Exemplo de heran\xe7a em C#:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:'public class Animal {\n    public void Falar() {\n        Console.WriteLine("Som gen\xe9rico de um animal.");\n    }\n}\n\npublic class Cachorro : Animal {\n    public void Falar() {\n        Console.WriteLine("Au au!");\n    }\n}\n'})}),"\n",(0,s.jsx)(o.h3,{id:"exemplo-de-polimorfismo-em-c",children:"Exemplo de polimorfismo em C#:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:'Animal animal = new Cachorro();\nanimal.Falar(); // Sa\xedda: "Au au!"\n'})}),"\n",(0,s.jsx)(o.h3,{id:"exemplo-de-encapsulamento-em-c",children:"Exemplo de encapsulamento em C#:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:"public class Pessoa {\n    private string nome;\n    public string Nome {\n        get { return nome; }\n        set { nome = value; }\n    }\n}\n"})})]})}function m(e={}){const{wrapper:o}={...(0,d.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>i,x:()=>r});var s=n(6540);const d={},a=s.createContext(d);function i(e){const o=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function r(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),s.createElement(a.Provider,{value:o},e.children)}}}]);